{
	"name": "raw data tables to dps",
	"properties": {
		"activities": [
			{
				"name": "Load raw tables to dps",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Parse table names",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Parse table names').output.runOutput",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Check current table count",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set last timestamp",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('select count(*) as rows from ', item(), ' WITH(NOLOCK) where t_rcd_utc >= ','''', variables('lastTimestamp'),'''')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ln_production_order",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Set rows variable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Check current table count",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "rows",
								"value": {
									"value": "@string(activity('Check current table count').output.value[0].rows)\n\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If rows greater than 0 get data",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set rows variable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(variables('rows'), '0'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "current_table_to_dps",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "@concat('select * from ', item(),' WITH(NOLOCK) where t_rcd_utc >= ','''', activity('Get timestamp').output.firstRow.lasttimestamp,'''')",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ln_production_order",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "RawDataset",
												"type": "DatasetReference",
												"parameters": {
													"tableName": {
														"value": "@item()",
														"type": "Expression"
													},
													"useCaseName": "infor-ln"
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "raw data to full dataset",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "If rows greater than 0 get data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "raw data to full dataset",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"currentTable": {
										"value": "@item()",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Get timestamp",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT lasttimestamp FROM ln_pipeline_parameter WHERE pipelinename = 'raw_data' AND tablename = '@{item()}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "usecase_parameters",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "Set last timestamp",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get timestamp",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "lastTimestamp",
								"value": {
									"value": "@activity('Get timestamp').output.firstRow.lasttimestamp",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Save a new timestamp to database",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Load raw tables to dps",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[save_new_timestamp]",
					"storedProcedureParameters": {
						"newTimestamp": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"pipelineName": {
							"value": "raw_data",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "asqdpseuwpd002",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get tableList",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select tablename from ln_pipeline_parameter where pipelinename = 'raw_data' and active = 'true'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "usecase_parameters",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Parse table names",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Get tableList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/LN Production Notebooks/string2Array",
					"baseParameters": {
						"value": {
							"value": "@string(activity('Get tableList').output.value)",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "dps_jobs_cluster",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"lastTimestamp": {
				"type": "String"
			},
			"tableNames": {
				"type": "Array"
			},
			"rows": {
				"type": "String"
			},
			"currentTable": {
				"type": "String"
			},
			"names": {
				"type": "String"
			},
			"testvar": {
				"type": "Array"
			},
			"testString": {
				"type": "String"
			}
		},
		"folder": {
			"name": "infor-ln/raw data pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2021-09-30T07:27:47Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}